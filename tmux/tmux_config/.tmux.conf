############################################################################
# GLOBALS
############################################################################

# use UTF8
set -g utf8
set-window-option -g utf8 on

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# set scrollback history to 10000 (10k)
set -g history-limit 10000



############################################################################
# PREFIX
############################################################################

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-a
unbind C-b  # unbind default leader key

# use send-prefix to pass C-a through to application
bind C-a send-prefix


############################################################################
# MOUSE CONTROL
############################################################################

# tmux 2
#setw -g mode-mouse on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on

# tmux 2.1
set-option -g mouse on


############################################################################
# NAVIGATION
############################################################################

# Maximize and restore a pane
unbind Up 
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp


############################################################################
# Tmux / Vim Change Panes
############################################################################

# Works with vim-tmux-navigator in VIM
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"


############################################################################
# MISC
############################################################################

# shorten command delay
# set -sg escape-time 1

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Make the current window the first window
bind T swap-window -t 1


############################################################################
# Status Bar
############################################################################

set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'

############################################################################
# DISABLED
############################################################################

# use PREFIX | to split window horizontally and PREFIX - to split vertically
# bind | split-window -h
# bind - split-window -v
# unbind '"' # unbind horizontal split
# unbind % # unbind vertical split

# vi movement keys
# set-option -g status-keys vi

# map Vi movement keys as pane movement keys
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# and use C-h and C-l to cycle thru panes
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# resize panes using PREFIX H, J, K, L
# bind H resize-pane -L 5
# bind J resize-pane -D 5
# bind K resize-pane -U 5
# bind L resize-pane -R 5



############################################################################
# DON'T KNOW WHAT IT IS
############################################################################

# list panes
# bind-key Space list-panes

# break-pane
# bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
# bind C-j command-prompt "joinp"
# bind C-j command-prompt "join-pane"
# bind-key j command-prompt "join-pane -s '%%'"
# bind-key j command-prompt "joinp -t:0"
# bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

#-----------------------------
# use vim motion keys while in copy mode
# setw -g mode-keys vi

#-----------------------------
# enable activity alerts
# setw -g monitor-activity on
# set -g visual-activity on

############################################################################
# EXAMPLES
############################################################################

############################################################################
# windows
############################################################################
# set-window-option -g window-status-current-bg red
# bind C-j previous-window
# bind C-k next-window
# bind-key C-a last-window # C-a C-a for last active window
# bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
# setw -g aggressive-resize on

# Resizing ---------------------------------------------------------------
# bind-key C-h resize-pane -L
# bind-key C-j resize-pane -D
# bind-key C-k resize-pane -U
# bind-key C-l resize-pane -R


############################################################################
# layouts
############################################################################
# bind o select-layout "active-only"
# bind M-- select-layout "even-vertical"
# bind M-| select-layout "even-horizontal"
# bind M-r rotate-window




############################################################################
# COLORS Cfg 01
############################################################################

# ----------------------
# set some pretty colors
# ----------------------
# set pane colors - hilight the active pane
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01

# colorize messages in the command line
# set-option -g message-bg black #base02
# set-option -g message-fg brightred #orange

# ----------------------
# Status Bar
# -----------------------
# set-option -g status on                # turn the status bar on
# set -g status-utf8 on                  # set utf-8 for the status bar
# set -g status-interval 5               # set update frequencey (default 15 seconds)
# set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
# setw -g monitor-activity on
# set -g visual-activity on

# set color for status bar
# set-option -g status-bg colour235 #base02
# set-option -g status-fg yellow #yellow
# set-option -g status-attr dim 

# set window list colors - red for active and cyan for inactive
# set-window-option -g window-status-fg brightblue #base0
# set-window-option -g window-status-bg colour236 
# set-window-option -g window-status-attr dim

# set-window-option -g window-status-current-fg brightred #orange
# set-window-option -g window-status-current-bg colour236 
# set-window-option -g window-status-current-attr bright

# show host name and IP address on left side of status bar
# set -g status-left-length 70
# set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "

# show session name, window & pane number, date and time on right side of
# status bar
# set -g status-right-length 60
# set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"

